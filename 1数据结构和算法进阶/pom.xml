<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.cjs.goHead</groupId>
	<artifactId>1DataStructureAndAlgorithmStudy</artifactId>
	<version>1.0-SNAPSHOT</version>
	<name>1数据结构和算法进阶</name>
	<properties>
		<!-- javac -encoding指定的编码格式 -->
		<project.build.sourceEncoding>
			UTF-8
		</project.build.sourceEncoding>
	</properties>
	<dependencies>
		<!-- junit依赖 -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<!-- 只在测试编译testCompile(testCompile不一定运行test)和测试运行test的时候添加此classPath，其余的时候都不添加，也不进行打包 -->
			<scope>test</scope>
		</dependency>
		<!-- Json依赖 -->
		<!-- <dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20151123</version>
		</dependency> -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>1.9.4</version>
		</dependency>
	</dependencies>
	<build>
		<!-- 配置插件,插件都是为了构建项目，所以这个节点应该位于build节点下 -->
		<plugins>
			<!-- 配置编译插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<!-- 有默认版本,命令行里面会警告warning -->
				<configuration>
					<!-- 使用jdk1.7的编译功能，因为1.5不支持<>运算符 -->
					<source>1.7</source>
					<target>1.7</target>
				</configuration>
			</plugin>
			<!-- 为此项目配置 多个sourceFolder -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<!-- 我们可以通过在这里添加多个source节点，来添加任意多个源文件夹 -->
								<source>src/main/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
	